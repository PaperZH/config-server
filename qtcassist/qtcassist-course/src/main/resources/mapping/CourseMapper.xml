<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ucar.qtcassist.course.dao.CourseMapper" >
  <resultMap id="BaseResultMap" type="com.ucar.qtcassist.course.model.CourseDO" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="type_id" property="typeId" jdbcType="BIGINT" />
    <result column="course_name" property="courseName" jdbcType="VARCHAR" />
    <result column="course_cover" property="courseCover" jdbcType="VARCHAR" />
    <result column="course_description" property="courseDescription" jdbcType="VARCHAR" />
    <result column="course_score" property="courseScore" jdbcType="REAL" />
    <result column="read_num" property="readNum" jdbcType="INTEGER" />
    <result column="praise_num" property="praiseNum" jdbcType="INTEGER" />
    <result column="invalid_date" property="invalidDate" jdbcType="TIMESTAMP" />
    <result column="publish_time" property="publishTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="del_flag" property="delFlag" jdbcType="TINYINT"/>
  </resultMap>
  <sql id="Base_Column_List" >
    id, type_id, course_name, course_cover, course_description, course_score, read_num, 
    praise_num, invalid_date, publish_time, update_time, del_flag
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from course
    where id = #{id,jdbcType=BIGINT}
  </select>
  <!-- 物理删除课程
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from course
    where id = #{id,jdbcType=BIGINT}
  </delete>
  -->
  <!--逻辑删除课程-->
  <update id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    update course
    set del_flag = 1
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="insert" parameterType="com.ucar.qtcassist.course.model.CourseDO" useGeneratedKeys="true" keyProperty="id">
    insert into course (type_id, course_name,
      course_cover, course_description, course_score, 
      read_num, praise_num, invalid_date, 
      publish_time, update_time, del_flag)
    values (#{typeId,jdbcType=BIGINT}, #{courseName,jdbcType=VARCHAR},
      #{courseCover,jdbcType=VARCHAR}, #{courseDescription,jdbcType=VARCHAR}, #{courseScore,jdbcType=REAL}, 
      #{readNum,jdbcType=INTEGER}, #{praiseNum,jdbcType=INTEGER}, #{invalidDate,jdbcType=TIMESTAMP}, 
      #{publishTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{delFlag,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.ucar.qtcassist.course.model.CourseDO" useGeneratedKeys="true" keyProperty="id">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="courseName != null" >
        course_name,
      </if>
      <if test="courseCover != null" >
        course_cover,
      </if>
      <if test="courseDescription != null" >
        course_description,
      </if>
      <if test="courseScore != null" >
        course_score,
      </if>
      <if test="readNum != null" >
        read_num,
      </if>
      <if test="praiseNum != null" >
        praise_num,
      </if>
      <if test="invalidDate != null" >
        invalid_date,
      </if>
      <if test="publishTime != null" >
        publish_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="typeId != null" >
        #{typeId,jdbcType=BIGINT},
      </if>
      <if test="courseName != null" >
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseCover != null" >
        #{courseCover,jdbcType=VARCHAR},
      </if>
      <if test="courseDescription != null" >
        #{courseDescription,jdbcType=VARCHAR},
      </if>
      <if test="courseScore != null" >
        #{courseScore,jdbcType=REAL},
      </if>
      <if test="readNum != null" >
        #{readNum,jdbcType=INTEGER},
      </if>
      <if test="praiseNum != null" >
        #{praiseNum,jdbcType=INTEGER},
      </if>
      <if test="invalidDate != null" >
        #{invalidDate,jdbcType=TIMESTAMP},
      </if>
      <if test="publishTime != null" >
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ucar.qtcassist.course.model.CourseDO" >
    update course
    <set >
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=BIGINT},
      </if>
      <if test="courseName != null" >
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseCover != null" >
        course_cover = #{courseCover,jdbcType=VARCHAR},
      </if>
      <if test="courseDescription != null" >
        course_description = #{courseDescription,jdbcType=VARCHAR},
      </if>
      <if test="courseScore != null" >
        course_score = #{courseScore,jdbcType=REAL},
      </if>
      <if test="readNum != null" >
        read_num = #{readNum,jdbcType=INTEGER},
      </if>
      <if test="praiseNum != null" >
        praise_num = #{praiseNum,jdbcType=INTEGER},
      </if>
      <if test="invalidDate != null" >
        invalid_date = #{invalidDate,jdbcType=TIMESTAMP},
      </if>
      <if test="publishTime != null" >
        publish_time = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ucar.qtcassist.course.model.CourseDO" >
    update course
    set type_id = #{typeId,jdbcType=BIGINT},
      course_name = #{courseName,jdbcType=VARCHAR},
      course_cover = #{courseCover,jdbcType=VARCHAR},
      course_description = #{courseDescription,jdbcType=VARCHAR},
      course_score = #{courseScore,jdbcType=REAL},
      read_num = #{readNum,jdbcType=INTEGER},
      praise_num = #{praiseNum,jdbcType=INTEGER},
      invalid_date = #{invalidDate,jdbcType=TIMESTAMP},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      del_flag = #{delFlag, jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>