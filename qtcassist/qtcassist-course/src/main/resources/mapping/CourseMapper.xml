<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ucar.qtcassist.course.dao.CourseMapper" >
  <resultMap id="BaseResultMap" type="com.ucar.qtcassist.api.model.DO.CourseDO" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="type_id" property="typeId" jdbcType="BIGINT" />
    <result column="course_name" property="courseName" jdbcType="VARCHAR" />
    <result column="course_cover" property="courseCover" jdbcType="VARCHAR" />
    <result column="course_description" property="courseDescription" jdbcType="VARCHAR" />
    <result column="course_score" property="courseScore" jdbcType="REAL" />
    <result column="read_num" property="readNum" jdbcType="INTEGER" />
    <result column="praise_num" property="praiseNum" jdbcType="INTEGER" />
    <result column="invalid_date" property="invalidDate" jdbcType="TIMESTAMP" />
    <result column="publish_time" property="publishTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="del_flag" property="delFlag" jdbcType="TINYINT" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, type_id, course_name, course_cover, course_description, course_score, read_num, 
    praise_num, invalid_date, publish_time, update_time, del_flag
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from assist_course
    where id = #{id,jdbcType=BIGINT}
  </select>

  <update id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    update assist_course
    set del_flag = 0
    where id = #{id,jdbcType=BIGINT}
  </update>

  <insert id="insert" parameterType="com.ucar.qtcassist.api.model.DO.CourseDO" useGeneratedKeys="true" keyProperty="id">
    insert into assist_course (type_id, course_name,
      course_cover, course_description, course_score, 
      read_num, praise_num, invalid_date, 
      publish_time, update_time
      )
    values (#{typeId,jdbcType=BIGINT}, #{courseName,jdbcType=VARCHAR},
      #{courseCover,jdbcType=VARCHAR}, #{courseDescription,jdbcType=VARCHAR}, #{courseScore,jdbcType=REAL}, 
      #{readNum,jdbcType=INTEGER}, #{praiseNum,jdbcType=INTEGER}, #{invalidDate,jdbcType=TIMESTAMP}, 
      #{publishTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>

  <insert id="insertSelective" parameterType="com.ucar.qtcassist.api.model.DO.CourseDO" useGeneratedKeys="true" keyProperty="id">
    insert into assist_course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="courseName != null" >
        course_name,
      </if>
      <if test="courseCover != null" >
        course_cover,
      </if>
      <if test="courseDescription != null" >
        course_description,
      </if>
      <if test="courseScore != null" >
        course_score,
      </if>
      <if test="readNum != null" >
        read_num,
      </if>
      <if test="praiseNum != null" >
        praise_num,
      </if>
      <if test="invalidDate != null" >
        invalid_date,
      </if>
      <if test="publishTime != null" >
        publish_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="typeId != null" >
        #{typeId,jdbcType=BIGINT},
      </if>
      <if test="courseName != null" >
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseCover != null" >
        #{courseCover,jdbcType=VARCHAR},
      </if>
      <if test="courseDescription != null" >
        #{courseDescription,jdbcType=VARCHAR},
      </if>
      <if test="courseScore != null" >
        #{courseScore,jdbcType=REAL},
      </if>
      <if test="readNum != null" >
        #{readNum,jdbcType=INTEGER},
      </if>
      <if test="praiseNum != null" >
        #{praiseNum,jdbcType=INTEGER},
      </if>
      <if test="invalidDate != null" >
        #{invalidDate,jdbcType=TIMESTAMP},
      </if>
      <if test="publishTime != null" >
        #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.ucar.qtcassist.api.model.DO.CourseDO" >
    update assist_course
    <set >
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=BIGINT},
      </if>
      <if test="courseName != null" >
        course_name = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="courseCover != null" >
        course_cover = #{courseCover,jdbcType=VARCHAR},
      </if>
      <if test="courseDescription != null" >
        course_description = #{courseDescription,jdbcType=VARCHAR},
      </if>
      <if test="courseScore != null" >
        course_score = #{courseScore,jdbcType=REAL},
      </if>
      <if test="readNum != null" >
        read_num = #{readNum,jdbcType=INTEGER},
      </if>
      <if test="praiseNum != null" >
        praise_num = #{praiseNum,jdbcType=INTEGER},
      </if>
      <if test="invalidDate != null" >
        invalid_date = #{invalidDate,jdbcType=TIMESTAMP},
      </if>
      <if test="publishTime != null" >
        publish_time = #{publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.ucar.qtcassist.api.model.DO.CourseDO" >
    update assist_course
    set type_id = #{typeId,jdbcType=BIGINT},
      course_name = #{courseName,jdbcType=VARCHAR},
      course_cover = #{courseCover,jdbcType=VARCHAR},
      course_description = #{courseDescription,jdbcType=VARCHAR},
      course_score = #{courseScore,jdbcType=REAL},
      read_num = #{readNum,jdbcType=INTEGER},
      praise_num = #{praiseNum,jdbcType=INTEGER},
      invalid_date = #{invalidDate,jdbcType=TIMESTAMP},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getTotalByIdListAndCourseName" resultType="java.lang.Integer" >
    select count(id)
    from assist_course where del_flag = 1
    <if test="ids != null">
      <foreach item="id" collection="ids"  index="index" open=" and id in (" separator="," close=")">
        #{id}
      </foreach>
    </if>
    <if test="courseName != null and courseName != ''">
      and course_name like CONCAT('%',#{courseName, jdbcType=VARCHAR},'%')
    </if>
  </select>

  <select id="getList" parameterType="com.ucar.qtcassist.api.model.DO.CourseDO" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from assist_course
    <where>
      del_flag = 1
      <if test="courseName != null">
        and course_name like CONCAT('%',#{courseName, jdbcType=VARCHAR},'%')
      </if>
    </where>
    <trim>
      <if test="orderType == 'time'">
        order by publish_time desc
      </if>
      <if test="orderType == 'hot'">
        order by praise_num desc
      </if>
    </trim>
    limit #{startIndex, jdbcType=INTEGER},#{pageSize, jdbcType=INTEGER}
  </select>

  <select id="getListByIds" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from assist_course
    <where>
      del_flag = 1
      <if test="array!=null">
        AND id in
        <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
    </where>
  </select>


  <!--<select id="getList" resultMap="BaseResultMap">-->
    <!--select-->
    <!--<include refid="Base_Column_List" />-->
    <!--from assist_course-->
    <!--<where>-->
      <!--del_flag = 1-->
      <!--<if test="courseName != null">-->
        <!--and course_name like CONCAT('%',#{courseName, jdbcType=VARCHAR},'%')-->
      <!--</if>-->
    <!--</where>-->
    <!--<trim>-->
      <!--<if test="orderType == 'time'">-->
        <!--order by publish_time desc-->
      <!--</if>-->
      <!--<if test="orderType == 'hot'">-->
        <!--order by praise_num desc-->
      <!--</if>-->
    <!--</trim>-->
    <!--limit #{startIndex, jdbcType=INTEGER},#{pageSize, jdbcType=INTEGER}-->
  <!--</select>-->

  <select id="getListByCondition" parameterType="com.ucar.qtcassist.api.model.DO.CourseDO" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List"/>
    from assist_course where del_flag = 1
    <foreach item="id" collection="courseIds" index="index" open="and id in (" separator="," close=")">
      #{id}
    </foreach>
    <if test="courseName != null and courseName != ''">
      and course_name like CONCAT('%',#{courseName, jdbcType=VARCHAR},'%')
    </if>
    <if test="startDate != null">
      and publish_time between #{startDate, jdbcType=TIMESTAMP} and #{endDate, jdbcType=TIMESTAMP}
    </if>
    <if test="startIndex != null">
      limit #{startIndex, jdbcType=INTEGER},#{pageSize, jdbcType=INTEGER}
    </if>
  </select>

  <!--<select id="getListByIdListAndCourseName" resultMap="BaseResultMap" >-->
    <!--select-->
    <!--<include refid="Base_Column_List"/>-->
    <!--from assist_course where del_flag = 1-->
    <!--<foreach item="id" collection="ids" index="index" open="and id in (" separator="," close=")">-->
      <!--#{id}-->
    <!--</foreach>-->
    <!--<if test="courseName != null and courseName != ''">-->
      <!--and course_name like CONCAT('%',#{courseName, jdbcType=VARCHAR},'%')-->
    <!--</if>-->
    <!--<if test="startDate != null">-->
      <!--and publish_time between #{startDate, jdbcType=TIMESTAMP} and #{endDate, jdbcType=TIMESTAMP}-->
    <!--</if>-->
    <!--<if test="startIndex != null">-->
      <!--limit #{startIndex, jdbcType=INTEGER},#{pageSize, jdbcType=INTEGER}-->
    <!--</if>-->
  <!--</select>-->

  <update id="updatePraiseNum">
    update assist_course
    set praise_num = praise_num + #{change}
    where id = #{courseId, jdbcType=BIGINT}
  </update>

</mapper>