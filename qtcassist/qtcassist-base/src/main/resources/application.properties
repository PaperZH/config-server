spring.profiles.active=dev

server.port=8762
spring.application.name=qtcassist
management.security.enabled=false

spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName=com.mysql.jdbc.Driver

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,logback
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true

mybatis.mapperLocations=classpath*:mapping/*.xml
mybatis.typeAliasesPackage=com.ucar.qtcassist.courseware.dao;com.ucar.qtcassist.course.dao;com.ucar.qtcassist.schedule.dao
mybatis.configLocation=classpath:Mybatis-config.xml

info.name=qtcassist
info.groupId=@project.groupId@
info.artifact=@project.artifactId@
info.version=@project.version@

## 配置中心服务的地址
#spring.cloud.config.uri=http://localhost:8888
## 要读取的配置文件application属性
#spring.cloud.config.name=application
## 要读取的配置文件profile属性,默认是dev
#spring.cloud.config.profile=dev
## 远程仓库的分支
#spring.cloud.config.label=master